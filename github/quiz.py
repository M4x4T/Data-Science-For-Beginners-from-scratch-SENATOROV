"""Contributing to the open-source note."""

# ## GitHub
# 1.1. Что такое GitHub?
# #бесплатный веб сервис для хостинга
# 1.2. Как GitHub связан с Git?
# #гит отслеживает версию проекта а гитхаб это веб сервис где можно хранить версии своего проекта на удалённом сервере
# 1.3. Чем отличается fork репозитория от его клонирования (clone)?
# #форк копирует рабочую копию проекта на ваш аккаунт гитхаб а клонироние это скачивания на вашу локальную машину для далнейшей работы с ним
# 1.4. Зачем нужны и как работают pull requests?
# #нужен для запроса на слияние, как это работает: форкаем проект вносим свои какие то изменения, обновления, новые фичи, и отправляем запрос на слияние ветки
# 1.5. GitHub использует ваш почтовый адрес для
# привязки ваших Git коммитов к вашей учётной записи?
# #да
# 1.6 Какая команда генерирует SSH ключ для Доступа по SSH к репозиторию (Рисунок 83)
# #Account settings>SSH keys>Add SSH key


# ## Рабочий процесс с использованием GitHub
# 3 Напишите 8 пунктов, которые нужно сделать, чтобы внести вклад в чужой проект.
# #1. Создайте форк проекта.
# #2. Создайте тематическую ветку на основании ветки master.
# #3. Создайте один или несколько коммитов с изменениями, улучшающих проект.
# #4. Отправьте эту ветку в ваш проект на GitHub
# #5. Откройте запрос на слияние на GitHub.
# #6. Обсуждайте его, вносите изменения, если нужно.
# #7. Владелец проекта принимает решение о принятии изменений, либо об их отклонении.
# #8. Получите обновлённую ветку master и отправьте её в свой форк.
# 3.1.
# Какие практики принято соблюдать при создании Pull Request чтобы закрыть автоматический issues?
# #В описании PR использовать ключевые слова GitHub:
# Closes #номер_ишью
# Fixes #номер_ишью
# Resolves #номер_ишью
# Тогда при мерже PR issue закроется автоматически.
# Какие практики принято соблюдать при создании commit чтобы закрыть автоматический issues?
# #В сообщении коммита можно тоже указывать
# 3.2 Как отклонить/закрыть пул реквест?
# #Перейти на вкладку Pull requests в репозитории.
# Выбрать нужный PR.
# Внизу страницы будет кнопка Close pull request.
# 3.3 Перед отправкой пул реквеста нужно ли создавать ишьюс?
# #Не обязательно
# 3.4 В какой вкладке можно посмотреть список изменений который был в пул реквесте? (Рисунок 92)
# #Files changed
# 3.5 В какой вкладке находится страница обсуждений пул реквеста? (Рисунок 94)
# #Conversation

# ## Создание запроса на слияние
# 4 Можно ли открыть пул реквест, если вы ничего не вносили в FORK?
# #Нет. PR сравнивает изменения между твоей веткой/форком и оригинальным репозиторием
# 4.1 Что нужно сделать чтобы открыть пул реквест? (Рисунок 90)
# #Внести изменения в код в своём форке.
# #Закоммитить и запушить изменения в ветку.
# #Нажать кнопку Compare & pull request в GitHub.
# #Добавить описание и отправить PR.
# 4.2 Что нужно сделать Если ваш Форк устарел?
# #нажать кнопку Sync fork
# 4.3 Что нужно сделать если в пул реквесте имеются конфликты слияния (Рисунок 96)
# #①Добавляем исходный репозиторий как удалённый с именем «upstream»
# #Получаем последние изменения из него
# #Сливаем основную ветку в нашу тематическую
# #Исправляем указанный конфликт
# #Отправляем изменения в ту же тематическую ветку
#
# ## Отрывки кода
# 5 Что нужно сделать Для добавления отрывка кода в комментарии к ишьюсу? (Рисунок 104)
# #Для добавления отрывка кода следует обрамить его обратными кавычками.
# 5.1 На какую клавишу нажать клавишу чтобы выделенный текст был включён как цитата в ваш комментарий?(Рисунок 105)
# #клавишу r
# 5.2 Как вставить картинку в ишьюс? (Рисунок 108)
# #Copy/Pass, Перетащить файл в окно комментария.
#
# ## Поддержание GitHub репозитория в актуальном состоянии
# 6 Как понять что ваш форк устарел?
# #В GitHub показывается сообщение: “This branch is behind main by X commits”
# 6.1 Как обновить форк?
# #В интерфейсе GitHub: кнопка Sync fork.
#
# ## Добавление участников
# 7 Как добавить участников в ваш репозиторий, чтобы команда могла работать над одним репозиторием? (Рисунок 112)
# #В меню Collaborators → Add people
#
# ## Упоминания и уведомления
# 8 Какой символ нужен для упоминания кого-либо? (Рисунок 118)
# #"@"
# 8.1 Где находится Центр уведомлений, напишите ссылку (Рисунок 121)
# #https://github.com/notifications
#
# ## Особенные файлы
# 9 Что такое и зачем нужен файл README
# #README.md — это файл документации в корне проекта.
# В нём описывается:
# назначение проекта
# установка
# использование
# примеры
#
# 9.1 Что такое и зачем нужен файл CONTRIBUTING (Рисунок 122)
# #CONTRIBUTING.md — инструкция для участников проекта:
# правила внесения изменений
# оформление PR
# стиль кода
# ссылки на обсуждения
#
# ## Управление проектом
# 10 Как измененить основную ветку (Рисунок 123)
# #Settings → Branches → Default branch → выбрать нужную ветку.
# 10. 1 Как передать проект? какая кнопка? (рисунок 124)
# #Settings → Danger Zone → Transfer ownership
# 10.2 Что такое файл .gitignore?
# #Это файл, в котором перечислены файлы и папки, которые Git должен игнорировать
