"""Quiz Cpython."""

# ### 1. Что такое CPython и чем он отличается от Python?
# #Python — это язык, а CPython — это интерпретатор

# 3. Сколько существует реализаций Python, и какая из них самая популярная?
# #самые популярные CPython, которая является стандартной реализацией. Другие заметные реализации включают Jython (написан на Java), IronPython (для .NET) и PyPy (быстрая реализация с JIT-компиляцией)
# 4. На каком языке написан CPython?
# #на яп С
# Поиск и установка CPython
# 5. (опционально) Кто создал CPython?
# #Гвидо ван Россум
# 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
# #он считается "быстрым" с точки зрения скорости разработки — написание кода на Python занимает меньше времени, чем на других языках
# 7. Напишите путь к Интерпретатору CPython на вашем компьютере
# Структура CPython
# #C:\Users\Maksat\AppData\Local\Programs\Python\Python39\python.exe
#
# Что содержится в папке include в CPython?
# #содержит файл необходимые для создания расширений на яп С
# Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
# #https://github.com/python/cpython
# Запуск файла с помощью CPython
# 11. Какая команда используется для запуска файла с помощью CPython?
# #если он установлен правильно(добавлен в переменные среды то ) python <file_name.py>
# 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
# #да если этот текстовый файл содержит валидный синтаксис Python
# 13. Как указать путь к интерпретатору и файлу для выполнения кода? Сначала путь к интерпретатору а потом к файлу
# Введение в PyPy
# #
#
# 14. Чем PyPy отличается от CPython?
# #PyPy компилирует часть кода "на лету" в машинный код главное отличие — наличие JIT-компилятора (Just-In-Time)
# Почему PyPy не может использоваться для всех проектов на Python?
# из-за проблем совместимости
# Где можно скачать PyPy?
# #https://www.pypy.org/download.html
# Установка и запуск PyPy
#
# 17. Как установить PyPy после скачивания?
# ##его достаточно распаковать в удобную папку затем можно добавить путь к исполняемому файлу PyPy в системную переменную PATH
# 18. Как запустить файл с помощью PyPy?
# #pypy <file_name.py>
# 19. Почему PyPy выполняет код быстрее, чем CPython?
# #Он анализирует часто используемые участки кода и компилирует их в машинный код во время выполнения это позволяет избежать накладных расходов на интерпретацию байт-кода
# Задание 5: Сравнение производительности CPython и PyPy
#
# Создайте файл performance_test.py с кодом:
#     import time
#     start_time = time.time()
#     total = 0
#     for i in range(1, 10000000):
#         total += i
#     end_time = time.time()
#
#     print("Result:", total)
#     print("Execution time:", end_time - start_time, "seconds")
# Запустите этот файл сначала через CPython, а затем через PyPy. Запишите результаты времени выполнения для обоих интерпретаторов.
# Сделайте вывод о разнице в производительности.
#
# Result: 49999995000000
# Execution time: 0.008118867874145508 seconds
# Result: 49999995000000
# Execution time: 0.5473790168762207 seconds
# 0.5473790168762207/0.008118867874145508 = 67.42
