"""Summary of the Chapter 2 Introduction to Python."""

#
# ---
#
# #  Конспект по Python
#
# ## Глава 2. Введение в Python
#
# ### 2.1. Что такое Python?
#
# * Python — это **интерпретируемый, высокоуровневый язык программирования**, созданный для простоты и удобства.
# * Используется в разных областях: веб-разработка, анализ данных, машинное обучение, автоматизация, научные вычисления.
#
# #### 2.1.1. Почему именно Python?
#
# * Универсальный и гибкий язык.
# * Богатая экосистема библиотек.
# * Широкое сообщество и множество готовых решений.
# * Подходит как для новичков, так и для профессионалов.
#
# #### 2.1.2. Появление Python
#
# * Создан Гвидо ван Россумом в конце 1980-х.
# * Первый релиз — 1991 год.
# * Название связано не со змеёй  а с британским комедийным шоу *Monty Python*.
#
# #### 2.1.3. Python и другие языки программирования
#
# * Проще и короче по синтаксису, чем C, C++ или Java.
# * Не требует компиляции, в отличие от C/Java.
# * Сильнее ориентирован на читаемость кода.
#
# #### 2.1.4. Философия Python
#
# * Основана на **«The Zen of Python» (PEP 20)**:
#
#   * Красивое лучше, чем уродливое.
#   * Простое лучше, чем сложное.
#   * Явное лучше, чем неявное.
#   * Читаемость имеет значение.
#
# ---
#
# ### 2.2. Преимущества Python
#
# #### 2.2.1. Простота
#
# * Синтаксис близок к естественному языку.
#
# #### 2.2.2. Лёгкость в изучении
#
# * Подходит для начинающих, не требует глубоких знаний программирования.
#
# #### 2.2.3. Свободный и открытый исходный код
#
# * Бесплатен и развивается сообществом.
#
# #### 2.2.4. Высокоуровневость
#
# * Меньше деталей низкоуровневой реализации.
#
# #### 2.2.5. Портативность
#
# * Работает на Windows, Linux, macOS, Android и других ОС.
#
# #### 2.2.6. Интерпретируемость
#
# * Код выполняется построчно без компиляции.
#
# #### 2.2.7. Интерпретаторы Python
#
# * **IPython** — расширенная интерактивная оболочка.
# * **CPython** — основной и самый распространённый интерпретатор.
# * **IronPython** — версия для .NET.
# * **Jython** — для JVM (Java).
# * **PyPy** — ускоренная версия Python с JIT-компиляцией.
# * **PythonNet** — интеграция с .NET.
# * **Stackless Python** — облегчённый интерпретатор с поддержкой многозадачности.
#
# #### 2.2.8. Объектно-ориентированность
#
# * Всё в Python — объект.
# * Поддержка классов, наследования, полиморфизма.
#
# #### 2.2.9. Расширяемость
#
# * Можно подключать модули на C, C++, Java и других языках.
#
# #### 2.2.10. Встраиваемость
#
# * Python можно встраивать внутрь других программ (например, игр).
#
# #### 2.2.11. Внушительные библиотеки
#
# * Стандартная библиотека: работа с файлами, сетью, регулярными выражениями и др.
# * Внешние библиотеки: NumPy, Pandas, TensorFlow, Flask, Django и тысячи других.
#
# ---
#
# ## Глава 3. Основы Python
#
# ### 3.1. Запуск Python
#
# * Возможные способы:
#
#   * В консоли (интерактивная оболочка).
#   * Через скрипты `.py`.
#   * Через IDE и Jupyter Notebook.
#
# ### 3.1.1. Использование Spyder IDE
#
# * IDE из Anaconda.
# * Поддержка отладки, работы с переменными, удобный редактор кода.
#
# ### 3.1.2. Использование Jupyter Notebook
#
# * Интерактивная среда для кода и текста.
# * Удобно для обучения, анализа данных, презентации результатов.
# * Поддержка кода, Markdown, визуализаций.
#
# ---
#
# **Итоговый вывод:**
# Python ценят за простоту, мощь, огромную экосистему библиотек и универсальность. Его легко освоить и можно использовать почти в любой сфере IT.
#
# ---
#
#

# ### 2.12. Упражнения
# #### 2.12.1. Ответьте на вопросы
# * 1 . Python - это программное обеспечение с открытым исходным кодом. Это то же самое, что и бесплатное ПО?
#
# ---
#
# Нет. Бесплатное ПО (freeware) может не давать доступ к исходному коду.
#
# Open Source (открытый исходный код) позволяет изучать, изменять и распространять программу.
#
# ---
#
# * 2. У всех ли бесплатных программ открытый исходный код? А если нет, то в чем разница?
#
# ---
#
# Не у всех. Бесплатные программы можно использовать без оплаты, но их код скрыт.
#
# Открытые программы (open source) дают право изменять код и делиться им.
#
# ---
#
# * 3. Python поддерживает динамическую типизацию. Что это такое?
#
# ---
#
# Тип переменной определяется во время выполнения программы, а не заранее.
#
# ---
#
# * 4. Назовите 5 самых популярных языков программирования для специалистов по анализу данных.
#
# ---
#
# python, R, SQL, C++, java, matlab
#
# ---
#
# * 5. В чем заключается преимущество Python по сравнению с языком С?
#
# ---
#
# * Более простой и читаемый синтаксис.
#
# * Быстрая разработка.
#
# * Огромные библиотеки для анализа данных и машинного обучения.
#
# * Не требует ручного управления памятью.
#
# ---
#
# * 6. Python портативен. Что в этом контексте означает «портативность»?
#
# ---
#
# Код Python можно запустить на разных операционных системах (Windows, Linux, macOS) без изменений или с минимальными изменениями.
#
# ---
#
# * 7. В чем разница между «расширяемым» и «встраиваемым» языком?
#
# ---
#
# Расширяемый → можно писать модули и расширять Python кодом на других языках (например, C/C++).
#
# Встраиваемый → Python можно встроить внутрь другой программы (например, в игру, чтобы писать скрипты).
#
# ---
#
# * 8. В чем смысл IDE? Чем она отличается от командной строки?
#
# ---
#
# IDE (интегрированная среда разработки): редактор кода, подсветка синтаксиса, отладка, запуск программ.
#
# Командная строка: минимальная среда, где вводятся команды для запуска кода.
#
# ---
#
# * 9. Как открыть существующий документ Jupyter Notebook? Чем эта процедура отличается от открытия РDF-файла или текстового файла?
#
# ---
#
# Открыть можно через команду jupyter notebook в терминале и выбор файла в браузере.
#
# PDF или TXT открываются просто как документ для чтения.
#
# Jupyter Notebook открывается как интерактивная среда, где можно запускать код
#
# ---
#
# * 10. В чем разница между «ячейками разметки Markdown» и «ячейками кода» в Jupyter Notebook? Для чего они нужны?
#
# ---
#
# Ячейки кода → содержат исполняемый Python-код.
#
# Markdown-ячейки → содержат текст с разметкой (заголовки, списки, формулы).
#
# Вместе они позволяют делать интерактивные учебные материалы, отчёты и проекты.
#
# ---
#
#
#
# #### 2.12.2. Правда или ложь
# * 1 . Язык программирования Python был назван в честь змеи питон. ложь
# * 2. Python - это высокоуровневый язык общего назначения. правда
# * 3. Python компилируется и не интерпретируется. ложь
# * 4. В Python команда два + два вернет Четыре. ложь
# * 5. Консоль IPython аналогична окну командной строки. правда
# * 6. Графики, выводимые в документе Jupyter Notebook, отображаются внутри
# самого документа. правда
# * 7. В комплекте с пакетом Aлaconda идут браузеры Chrome и Firefox. ложь
# * 8. «Простое лучше, чем сложное» - это одна из философий Python. правда
# * 9. Аббревиатура FLOSS означает «Free/Libre and Open Source Software». правда
# * 10. Python поддерживает ТОЛЬКО объектно-ориентированное программирование.ложь
#
#
